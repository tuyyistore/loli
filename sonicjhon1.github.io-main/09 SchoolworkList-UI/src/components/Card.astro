---
export interface Props {
	title: string;
	body: string;
	tag: string;
	href: string;
	image: string;
	width?: string;
	height?: string;
}

const { title, body, tag, href, image, width, height } = Astro.props;
---

<a href={href} class="card h-min select-none">
	<div class="card bg-base-100 border-base-content/20 w-full max-w-full border-2 border-solid shadow-xl">
		<figure>
			<img src={image} alt="owo" decoding="async" width=`${width}px` height=`${height}px`/>
		</figure>
		<div class="card-body">
			<h2 class="card-title">
				{title}
				<div class="badge badge-secondary">NEW</div>
			</h2>
			<p class="whitespace-pre-line">{body}</p>
			<div class="card-actions justify-end">
				<div class="badge badge-outline">{tag}</div>
			</div>
		</div>
	</div>
</a>

<style>
	.card {
		transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
		transition-duration: 200ms;
		transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
		animation: button-pop var(--animation-btn, 0.25s) ease-out;
	}
	.card:active:hover,
	.card:active:focus {
		animation: none;
		transform: scale(var(--btn-focus-scale, 0.95));
	}
	.card:hover,
	.card-active {
		border-color: hsl(var(--p));
		background-color: hsl(var(--nf, var(--n)) / var(--tw-bg-opacity));
	}
	.card:focus-visible {
		outline: 2px solid hsl(var(--nf));
		outline-offset: 2px;
	}
</style>
